name: CI/CD

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  composer:
    name: composer install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup PHP cache
        uses: shivammathur/cache-extensions@v1
        id: php-ext-cache
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          key: php82-cache
      - name: Cache PHP extensions
        uses: actions/cache@v4
        with:
          path: ${{ steps.php-ext-cache.outputs.dir }}
          key: ${{ steps.php-ext-cache.outputs.key }}
          restore-keys: ${{ steps.php-ext-cache.outputs.key }}
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        id: composer-cache
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-progress --no-scripts --no-autoloader

      - name: Generate Composer autoloader
        run: composer dump-autoload

  phpcs:
    name: phpcs
    needs: composer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup PHP cache
        uses: shivammathur/cache-extensions@v1
        id: php-ext-cache
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          key: php82-cache
      - name: Cache PHP extensions
        uses: actions/cache@v4
        with:
          path: ${{ steps.php-ext-cache.outputs.dir }}
          key: ${{ steps.php-ext-cache.outputs.key }}
          restore-keys: ${{ steps.php-ext-cache.outputs.key }}
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        id: composer-cache
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Cache php-cs-fixer cache
        uses: actions/cache@v4
        id: php-cs-fixer-cache
        with:
          path: .php-cs-fixer.cache
          key: ${{ runner.os }}-php-cs-fixer-${{ github.ref }}-${{ hashFiles('.php-cs-fixer.php') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-php-cs-fixer-${{ github.ref }}-${{ hashFiles('php-cs-fixer.php') }}-
            ${{ runner.os }}-php-cs-fixer-${{ github.ref }}-
            ${{ runner.os }}-php-cs-fixer-
      - name: Validate code style
        run: composer phpcs:ci
        env:
          PHP_CS_FIXER_IGNORE_ENV: 1

  phpstan:
    name: phpstan
    needs: composer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup PHP cache
        uses: shivammathur/cache-extensions@v1
        id: php-ext-cache
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          key: php82-cache
      - name: Cache PHP extensions
        uses: actions/cache@v4
        with:
          path: ${{ steps.php-ext-cache.outputs.dir }}
          key: ${{ steps.php-ext-cache.outputs.key }}
          restore-keys: ${{ steps.php-ext-cache.outputs.key }}
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        id: composer-cache
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Cache PHPStan cache
        uses: actions/cache@v4
        id: phpstan-cache
        with:
          path: storage/tmp/phpstan
          key: ${{ runner.os }}-phpstan-${{ github.ref }}-${{ hashFiles('phpstan.neon') }}-${{ github.run_id }}
          restore-keys: |
            ${{ runner.os }}-phpstan-${{ github.ref }}-${{ hashFiles('phpstan.neon') }}-
            ${{ runner.os }}-phpstan-${{ github.ref }}-
            ${{ runner.os }}-phpstan-
      - name: Run PHPStan
        run: |
          cp .env.testing.template .env.testing
          composer phpstan:ci
        env:
          APP_ENV: 'testing'
        timeout-minutes: 15

  security:
    name: security
    needs: composer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Check for security issues in dependencies
        uses: symfonycorp/security-checker-action@v5

  build:
    if: github.ref == 'refs/heads/main'
    name: build
    needs: [ phpstan, security ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Setup PHP cache
        uses: shivammathur/cache-extensions@v1
        id: php-ext-cache
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          key: php82-cache
      - name: Cache PHP extensions
        uses: actions/cache@v4
        with:
          path: ${{ steps.php-ext-cache.outputs.dir }}
          key: ${{ steps.php-ext-cache.outputs.key }}
          restore-keys: ${{ steps.php-ext-cache.outputs.key }}
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none
      - name: Cache Composer dependencies
        uses: actions/cache@v4
        id: composer-cache
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Get latest tag
        id: previous_tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "1.0")
          echo "tag=$LATEST_TAG" >> $GITHUB_OUTPUT
          # Increment minor version
          MAJOR=$(echo $LATEST_TAG | cut -d. -f1)
          MINOR=$(echo $LATEST_TAG | cut -d. -f2)
          NEXT_MINOR=$((MINOR + 1))
          NEXT_VERSION="${MAJOR}.${NEXT_MINOR}"
          echo "next_version=$NEXT_VERSION" >> $GITHUB_OUTPUT

      - name: Build Chief Tools CLI
        run: php chief app:build chief --build-version=${{ steps.previous_tag.outputs.next_version }}

      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
      - name: Commit build
        run: |
          git add builds/chief
          git commit -m "Build version ${{ steps.previous_tag.outputs.next_version }} [skip ci]" || echo "No changes to commit"
          git tag -a "${{ steps.previous_tag.outputs.next_version }}" -m "Version ${{ steps.previous_tag.outputs.next_version }}"

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
          tags: true
